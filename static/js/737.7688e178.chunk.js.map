{"version":3,"file":"static/js/737.7688e178.chunk.js","mappings":"uKACA,QAA+B,iCAA/B,EAA+E,iCAA/E,EAAiI,mC,aCGjI,MA6BA,EA7BmBA,IAAgB,IAAf,MAAEC,GAAOD,EAC3B,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAoBC,SAChCN,EAAMO,KAAIC,IACTL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAoBC,UACjCH,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHL,UAAWC,EACXK,GAAE,WAAAC,OAAaH,EAAKI,IACpBC,MAAO,CAAEC,KAAMb,GAAWK,SAEzBE,EAAKO,SAN+BP,EAAKI,OAU7C,C,4ECnBT,QAA6B,yBAA7B,EAAkE,wBAAlE,EAAoG,sB,aCGpG,MAiCA,EAjCab,IAAuB,IAAtB,aAAEiB,GAAcjB,EAC5B,MAAOkB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAWnC,OACEC,EAAAA,EAAAA,MAAA,QAAMhB,UAAWC,EAAmBgB,SANjBC,IACnBA,EAAMC,iBACNP,EAAaC,EAAMO,cAAc,EAI0BlB,SAAA,EACzDH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXoB,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOX,EACPY,SAjBoBP,IACxBJ,EAASI,EAAMQ,OAAOF,MAAM,KAkB1BzB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAgBoB,KAAK,SAAQnB,SAAC,aAG5C,E,aC5BX,QAA2B,yBCyC3B,EAnCeyB,KACb,MAAOC,EAAaC,IAAkBd,EAAAA,EAAAA,UAAS,KACxCe,EAASC,IAAchB,EAAAA,EAAAA,WAAS,IAChCiB,EAAcC,IAAmBlB,EAAAA,EAAAA,WAAS,GAkBjD,OACEC,EAAAA,EAAAA,MAAA,QAAAd,SAAA,EACEH,EAAAA,EAAAA,KAACmC,EAAI,CAACtB,aAlBWuB,IACnBJ,GAAW,IAEXK,EAAAA,EAAAA,IAAqBD,GAClBE,MAAKC,IACJT,EAAeS,GACfL,EAAyC,IAAzBK,EAAcC,OAAa,IAE5CC,OAAMC,IACLC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACPb,GAAW,EAAM,GACjB,IAMDD,IAAW/B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,IAClBb,IACCjC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAC,6DAIhC0B,IAAe7B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAAClD,MAAOgC,MAC9B,C,mFCpCXmB,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,MAAMC,EAAU,mCAEHC,EAAgBC,gBACJL,EAAAA,EAAMM,IAAI,8BAAD9C,OAA+B2C,KAC/CI,KAAKC,QAGVnB,EAAuBgB,gBACXL,EAAAA,EAAMM,IAAI,wBAAD9C,OACN2C,EAAO,qDAAA3C,OAAoDiD,KAErEF,KAAKC,QAGVE,EAAoBL,gBACRL,EAAAA,EAAMM,IAAI,SAAD9C,OACrBmD,EAAO,aAAAnD,OAAY2C,EAAO,qBAErBI,KAGLK,EAAcP,gBACFL,EAAAA,EAAMM,IAAI,SAAD9C,OACrBmD,EAAO,qBAAAnD,OAAoB2C,EAAO,qBAE7BI,KAAKM,KAGVC,EAAeT,gBACHL,EAAAA,EAAMM,IAAI,SAAD9C,OACrBmD,EAAO,qBAAAnD,OAAoB2C,EAAO,4BAE7BI,KAAKC,O","sources":["webpack://goit-react-hw-05-movies/./src/pages/EditorList/EditorList.module.css?6fe9","pages/EditorList/EditorList.jsx","webpack://goit-react-hw-05-movies/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","service/TmbdApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editorListUl\":\"EditorList_editorListUl__Yarbz\",\"editorListLi\":\"EditorList_editorListLi__CmhNJ\",\"editorListLink\":\"EditorList_editorListLink__Y-wjl\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './EditorList.module.css';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.editorListUl}>\n      {films.map(film => (\n        <li className={styles.editorListLi} key={film.id}>\n          <Link\n            className={styles.editorListLink}\n            to={`/movies/${film.id}`}\n            state={{ from: location }}\n          >\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Form_searchForm__eyCyq\",\"formInput\":\"Form_formInput__sgOCo\",\"formBtn\":\"Form_formBtn__u8Ete\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <form className={styles.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={styles.formInput}\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button className={styles.formBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;","// extracted by mini-css-extract-plugin\nexport default {\"noMovieP\":\"Movies_noMovieP__MU7+O\"};","import { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'service/TmbdApi';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = queryMovie => {\n    setLoading(true);\n\n    fetchSearchByKeyword(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p className={styles.noMovieP}>\n          There is no movies with this request. Please, try again.\n        </p>\n      )}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1216de54fbd4029ce727364da882579b';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["_ref","films","location","useLocation","_jsx","className","styles","children","map","film","Link","to","concat","id","state","from","title","searchMovies","query","setQuery","useState","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","Movies","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","Form","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","defaults","baseURL","API_KEY","fetchTrending","async","get","data","results","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}